import data_structures.BinaryHeapPriorityQueue;

import java.net.SocketOption;
import java.util.Iterator;

public class BinaryHeapTester {

    public static void main(String[] args){

        BinaryHeapPriorityQueue<Integer> bpq = new BinaryHeapPriorityQueue<Integer>();
       /* System.out.println("TEST NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);

        System.out.println("----------------------------------------");
        System.out.println("ADDING NUMBERS TO EMPTY QUEUE");
       // bpq.insert(0);
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);

        System.out.println("----------------------------------------");
        System.out.println("ADDING NUMBERS TO QUEUE");
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);

        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);

        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.remove();
        System.out.println("REMOVE TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        print(bpq);



*/

       /*
        System.out.println("----------------------------------------");
        bpq.clear();
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 3?: " + bpq.contains(3));
        print(bpq);

        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        bpq.contains(3);
       // System.out.println("index of 6:  " + bpq.findIndex(0,6));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
      //  System.out.println("index of 17: " + bpq.findIndex(0,17));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
     //   System.out.println("index of 27: " + bpq.findIndex(0,27));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        //System.out.println("index of 22: " + bpq.findIndex(0,22));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
      //  System.out.println("index of 19: " + bpq.findIndex(0,19));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
      //  System.out.println("index of 30: " + bpq.findIndex(0,30));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        bpq.contains(3);
       // System.out.println("index of 63: " + bpq.findIndex(0,63));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        bpq.contains(3);
       // System.out.println("index of 74: " + bpq.findIndex(0,74));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        bpq.contains(3);
       // System.out.println("index of 29: " + bpq.findIndex(0,29));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(6);
        bpq.insert(17);
        bpq.insert(27);
        bpq.insert(22);
        bpq.insert(19);
        bpq.insert(30);
        bpq.insert(63);
        bpq.insert(74);
        bpq.insert(29);
        bpq.insert(7);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        bpq.contains(3);
     //   System.out.println("index of 7: " + bpq.findIndex(0,7));
        print(bpq);




        */

/*
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 0?: " + bpq.contains(0));
        System.out.println(bpq.delete(0));
        print(bpq);

        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 1?: " + bpq.contains(1));
        System.out.println(bpq.delete(1));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 2?: " + bpq.contains(2));
        System.out.println(bpq.delete(2));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 3?: " + bpq.contains(2));
        System.out.println(bpq.delete(3));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 4?: " + bpq.contains(4));
        System.out.println(bpq.delete(4));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 5?: " + bpq.contains(5));
        System.out.println(bpq.delete(5));
        print(bpq);
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(0);
        bpq.insert(1);
        bpq.insert(2);
        bpq.insert(3);
        bpq.insert(4);
        bpq.insert(5);
        bpq.insert(6);
        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 6?: " + bpq.contains(6));
        System.out.println(bpq.delete(6));
        print(bpq);

 */
        System.out.println("----------------------------------------");
        bpq.clear();
        bpq.insert(10);
        bpq.insert(20);
        bpq.insert(11);
        bpq.insert(24);

        bpq.insert(25);
        bpq.insert(12);
        bpq.insert(13);
        bpq.insert(25);
        bpq.insert(25);
        bpq.insert(25);

        System.out.println("CLEAR TEST. NOTHING IN QUEUE");
        System.out.println("isFull: " +  bpq.isFull());
        System.out.println("isEmpty: " +  bpq.isEmpty());
        System.out.println("size: " +  bpq.size());
        System.out.println("peek: " +  bpq.peek());
        System.out.println("contains 6?: " + bpq.contains(6));
        System.out.println(bpq.delete(25));
        print(bpq);




    }
    public static void print(BinaryHeapPriorityQueue binaryHeapPriorityQueue){
        Iterator iter = binaryHeapPriorityQueue.iterator();
        while(iter.hasNext()){
            System.out.println(iter.next());
        }
    }


}
